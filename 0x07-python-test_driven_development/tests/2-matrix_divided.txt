The '2-matrix_divided' module
=============================

Using ``matrix_divided``
-----------------------

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    # Check if no div has been supplied
    >>> print(matrix_divided(matrix))
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    # Check if matrix does not have the same size
    >>> matrix = [[1, 2], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    # Check if matrix contains non-integer and non-floats
    >>> matrix = [[1, 2, "Hello"], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    # Check if passed a divisor equal to zero
    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    # Check if passed divisor is a non-integer/non-float
    >>> print(matrix_divided(matrix, "Hello"))
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    # Check for a float divisor
    >>> print(matrix_divided(matrix, 0.5))
    [[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]

    # Check for an infinity divisor
    >>> print(matrix_divided(matrix, float('inf')))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
